apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco-android'

task jacocoFullTestReport(type: JacocoReport, dependsOn: ['jacocoTestReport', 'createDevDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDevDebugUnitTest.exec", "outputs/code-coverage/connected/flavors/DEV/*coverage.ec"
    ])
}

android {
    compileSdkVersion api_level.toInteger()
    buildToolsVersion build_tools_version
    defaultConfig {
        minSdkVersion min_api_level.toInteger()
        targetSdkVersion api_level.toInteger()
        versionCode 1
        versionName '3.7.0'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        exclude 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'LICENSE.txt'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            multiDexEnabled true
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    project.gradle.taskGraph.whenReady {
        connectedDevDebugAndroidTest {
            ignoreFailures = true
        }
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions "environment"

    productFlavors {
        dev {
            dimension "environment"
            buildConfigField "String", "API_VERSION", "\"beta\""
        }
        prod {
            dimension "environment"
            buildConfigField "String", "API_VERSION", "\"v1\""
        }
    }
}

project.gradle.taskGraph.whenReady {
    connectedDevDebugAndroidTest {
        ignoreFailures = true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.2"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:2.2.2"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:2.2.2") {
        exclude module: 'support-v4'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    testCompile "junit:junit:$junit"
    testCompile "org.mockito:mockito-core:2.+"

    compile "com.android.support:cardview-v7:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"
    compile "com.android.support:support-v4:$support_library_version"
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.android.support:design:$support_library_version"
    compile "com.android.support:percent:$support_library_version"
    compile "com.android.support:support-annotations:$support_library_version"

    compile "com.squareup.okhttp3:okhttp:$okhttp"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$okhttp"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp"
    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "com.squareup.picasso:picasso:$picasso"

    compile "com.mercadopago:services:1.0.1"
    compile "com.mercadopago:tracking:2.2.2"
}
configurations {
    archives {
        extendsFrom configurations.default
    }
}
